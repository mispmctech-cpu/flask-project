-- =====================================================
-- COMPLETE ADMIN DASHBOARD SQL SETUP
-- =====================================================
-- This creates all tables and data needed for admin pages to work properly

-- =====================================================
-- 1. FORMSTATUS TABLE (Required for Forms Control Page)
-- =====================================================
CREATE TABLE IF NOT EXISTS public."FormStatus" (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  form_name text NOT NULL,
  is_open boolean DEFAULT true,
  description text NULL,
  category text NULL DEFAULT 'faculty',
  frequency text NULL,
  target_roles text[] NULL,
  created_at timestamp DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT FormStatus_pkey PRIMARY KEY (id),
  CONSTRAINT FormStatus_form_name_key UNIQUE (form_name)
);

-- =====================================================
-- 2. FORMSTATUSLOG TABLE (Required for Recent Activity)
-- =====================================================
CREATE TABLE IF NOT EXISTS public."FormStatusLog" (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  form_name text NOT NULL,
  old_status boolean NULL,
  new_status boolean NOT NULL,
  changed_by bigint NULL,
  changed_at timestamp DEFAULT CURRENT_TIMESTAMP,
  reason text NULL,
  CONSTRAINT FormStatusLog_pkey PRIMARY KEY (id)
);

-- =====================================================
-- 3. NOTIFICATIONS TABLE (Required for Notifications)
-- =====================================================
CREATE TABLE IF NOT EXISTS public."Notifications" (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  title text NOT NULL,
  message text NOT NULL,
  type text DEFAULT 'info',
  priority text DEFAULT 'normal',
  target_role text NULL,
  target_department text NULL,
  is_active boolean DEFAULT true,
  is_read boolean DEFAULT false,
  created_by bigint NULL,
  created_at timestamp DEFAULT CURRENT_TIMESTAMP,
  expires_at timestamp NULL,
  CONSTRAINT Notifications_pkey PRIMARY KEY (id)
);

-- =====================================================
-- 4. DEPARTMENTS TABLE (Required for Department Management)
-- =====================================================
CREATE TABLE IF NOT EXISTS public."Departments" (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name text NOT NULL,
  code text NOT NULL,
  description text NULL,
  hod_id bigint NULL,
  faculty_count integer DEFAULT 0,
  is_active boolean DEFAULT true,
  established_year integer NULL,
  created_at timestamp DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT Departments_pkey PRIMARY KEY (id),
  CONSTRAINT Departments_code_key UNIQUE (code),
  CONSTRAINT Departments_name_key UNIQUE (name)
);

-- =====================================================
-- 5. SYSTEMSETTINGS TABLE (Required for System Configuration)
-- =====================================================
CREATE TABLE IF NOT EXISTS public."SystemSettings" (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  setting_key text NOT NULL,
  setting_value text NULL,
  description text NULL,
  category text DEFAULT 'general',
  is_editable boolean DEFAULT true,
  data_type text DEFAULT 'string',
  created_at timestamp DEFAULT CURRENT_TIMESTAMP,
  updated_at timestamp DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT SystemSettings_pkey PRIMARY KEY (id),
  CONSTRAINT SystemSettings_setting_key_key UNIQUE (setting_key)
);

-- =====================================================
-- 6. ADD MISSING COLUMNS TO EXISTING TABLES (if needed)
-- =====================================================

-- Add is_active to Admin table if not exists
ALTER TABLE public."Admin" ADD COLUMN IF NOT EXISTS is_active boolean DEFAULT true;
ALTER TABLE public."Admin" ADD COLUMN IF NOT EXISTS role text DEFAULT 'ADMIN';
ALTER TABLE public."Admin" ADD COLUMN IF NOT EXISTS created_at timestamp DEFAULT CURRENT_TIMESTAMP;

-- =====================================================
-- 7. POPULATE FORMSTATUS TABLE
-- =====================================================
INSERT INTO public."FormStatus" (form_name, is_open, description, category, frequency) VALUES
('Faculty Form 1', true, 'Personal Information Form', 'faculty', 'Weekly'),
('Faculty Form 2', true, 'Academic Performance Form', 'faculty', 'Daily'),
('Faculty Form 3', false, 'Research Publications Form', 'faculty', 'Weekly'),
('Faculty Form 4', true, 'Teaching Activities Form', 'faculty', 'Weekly'),
('Faculty Form 5', true, 'Professional Development Form', 'faculty', 'Once in 3 Months'),
('Faculty Form 6', false, 'Administrative Tasks Form', 'faculty', 'Once in 2 Months'),
('Faculty Form 7', true, 'Student Feedback Form', 'faculty', 'Once in 2 Months'),
('Faculty Form 8', true, 'Extension Activities Form', 'faculty', 'Once in Semester'),
('Institution Form 1', true, 'Infrastructure Report', 'institution', 'Monthly'),
('Institution Form 2', false, 'Academic Calendar', 'institution', 'Once in 6 Months'),
('Institution Form 3', true, 'Budget Planning', 'institution', 'Yearly'),
('Institution Form 4', true, 'Quality Assurance', 'institution', 'Monthly'),
('Institution Form 5', false, 'External Relations', 'institution', 'Yearly'),
('Institution Form 6', true, 'Technology Infrastructure', 'institution', 'Monthly'),
('Institution Form 7', true, 'Student Services', 'institution', 'Monthly'),
('Institution Form 8', true, 'Library Resources', 'institution', 'Yearly'),
('Institution Form 9', false, 'Alumni Network', 'institution', 'Yearly'),
('Institution Form 10', true, 'Research & Development', 'institution', 'Once in 6 Months'),
('Institution Form 11', false, 'Industry Partnerships', 'institution', 'Yearly'),
('Institution Form 12', true, 'Safety & Security', 'institution', 'Monthly'),
('Institution Form 13', true, 'Environmental Compliance', 'institution', 'Monthly'),
('Institution Form 14', false, 'International Relations', 'institution', 'Once in 6 Months'),
('Institution Form 15', true, 'Innovation Hub', 'institution', 'Yearly'),
('Institution Form 16', false, 'Entrepreneurship Programs', 'institution', 'Yearly'),
('Institution Form 17', true, 'Digital Transformation', 'institution', 'Yearly')
ON CONFLICT (form_name) DO UPDATE SET
  is_open = EXCLUDED.is_open,
  description = EXCLUDED.description,
  category = EXCLUDED.category,
  frequency = EXCLUDED.frequency;

-- =====================================================
-- 8. POPULATE DEPARTMENTS TABLE
-- =====================================================
INSERT INTO public."Departments" (name, code, description, is_active, established_year) VALUES
('Computer Science and Engineering', 'CSE', 'Department of Computer Science and Engineering', true, 2000),
('Electronics and Communication Engineering', 'ECE', 'Department of Electronics and Communication Engineering', true, 2001),
('Mechanical Engineering', 'MECH', 'Department of Mechanical Engineering', true, 1999),
('Civil Engineering', 'CIVIL', 'Department of Civil Engineering', true, 1998),
('Electrical and Electronics Engineering', 'EEE', 'Department of Electrical and Electronics Engineering', true, 2002),
('Information Technology', 'IT', 'Department of Information Technology', true, 2003),
('Aeronautical Engineering', 'AERO', 'Department of Aeronautical Engineering', true, 2010),
('Chemical Engineering', 'CHEM', 'Department of Chemical Engineering', true, 2005),
('Artificial Intelligence and Data Science', 'AIDS', 'Department of AI and Data Science', true, 2020),
('Artificial Intelligence and Machine Learning', 'AIML', 'Department of AI and Machine Learning', true, 2021),
('Computer Science and Business Systems', 'CSBS', 'Department of Computer Science and Business Systems', true, 2019),
('Master of Computer Applications', 'MCA', 'Department of Master of Computer Applications', true, 2004),
('Master of Business Administration', 'MBA', 'Department of Master of Business Administration', true, 2006),
('Science and Humanities', 'S&H', 'Department of Science and Humanities', true, 1997),
('Management Studies', 'MCO', 'Department of Management Studies', true, 2007)
ON CONFLICT (code) DO UPDATE SET
  name = EXCLUDED.name,
  description = EXCLUDED.description,
  is_active = EXCLUDED.is_active;

-- =====================================================
-- 9. POPULATE NOTIFICATIONS TABLE
-- =====================================================
INSERT INTO public."Notifications" (title, message, type, priority, target_role, is_active, created_by) VALUES
('System Maintenance Notice', 'Scheduled maintenance will be performed on Sunday from 2:00 AM to 4:00 AM', 'warning', 'high', 'all', true, 1),
('New Faculty Forms Available', 'Faculty Form 5 and Form 7 are now available for submission', 'info', 'normal', 'faculty', true, 1),
('Deadline Reminder', 'Institution Form submissions are due by end of this month', 'warning', 'high', 'management', true, 1),
('System Update Complete', 'The admin dashboard has been updated with new features', 'success', 'normal', 'admin', true, 1),
('Welcome Message', 'Welcome to the PMC Tech Admin Dashboard. All systems are operational.', 'info', 'normal', 'admin', true, 1);

-- =====================================================
-- 10. POPULATE SYSTEM SETTINGS
-- =====================================================
INSERT INTO public."SystemSettings" (setting_key, setting_value, description, category, data_type) VALUES
('system_name', 'PMC Tech Admin System', 'System display name', 'general', 'string'),
('academic_year', '2024-25', 'Current academic year', 'academic', 'string'),
('semester', 'Odd Semester', 'Current semester', 'academic', 'string'),
('maintenance_mode', 'false', 'Enable/disable maintenance mode', 'system', 'boolean'),
('max_file_size', '10485760', 'Maximum file upload size (bytes)', 'files', 'number'),
('session_timeout', '3600', 'Session timeout in seconds', 'security', 'number'),
('password_min_length', '6', 'Minimum password length', 'security', 'number'),
('email_notifications', 'true', 'Enable email notifications', 'notifications', 'boolean'),
('backup_frequency', '24', 'Database backup frequency (hours)', 'system', 'number'),
('login_attempts_max', '3', 'Maximum login attempts', 'security', 'number')
ON CONFLICT (setting_key) DO UPDATE SET
  setting_value = EXCLUDED.setting_value,
  description = EXCLUDED.description;

-- =====================================================
-- 11. ADD SAMPLE ACTIVITY LOGS
-- =====================================================
INSERT INTO public."FormStatusLog" (form_name, old_status, new_status, changed_by, reason) VALUES
('Faculty Form 3', true, false, 1, 'Temporarily disabled for updates'),
('Faculty Form 6', true, false, 1, 'Under review by academic committee'),
('Institution Form 2', true, false, 1, 'Pending approval from management'),
('Institution Form 5', false, true, 1, 'Re-enabled after review completion'),
('Faculty Form 7', false, true, 1, 'Updated and re-activated for new semester');

-- =====================================================
-- 12. CREATE INDEXES FOR BETTER PERFORMANCE
-- =====================================================
CREATE INDEX IF NOT EXISTS idx_formstatus_open ON public."FormStatus" (is_open);
CREATE INDEX IF NOT EXISTS idx_notifications_active ON public."Notifications" (is_active);
CREATE INDEX IF NOT EXISTS idx_notifications_target ON public."Notifications" (target_role);
CREATE INDEX IF NOT EXISTS idx_departments_active ON public."Departments" (is_active);
CREATE INDEX IF NOT EXISTS idx_formlog_date ON public."FormStatusLog" (changed_at DESC);
CREATE INDEX IF NOT EXISTS idx_faculty_dept ON public."Faculty" (department);
CREATE INDEX IF NOT EXISTS idx_hod_dept ON public."HOD" (department);

-- =====================================================
-- 13. UPDATE DEPARTMENT FACULTY COUNTS
-- =====================================================
UPDATE public."Departments" SET faculty_count = (
    SELECT COUNT(*) 
    FROM public."Faculty" 
    WHERE public."Faculty".department = public."Departments".code 
       OR public."Faculty".department = public."Departments".name
);

-- =====================================================
-- 14. VERIFICATION QUERIES
-- =====================================================
SELECT 'ADMIN DASHBOARD SETUP COMPLETE!' as status;

-- Show all table counts
SELECT 'TABLE COUNTS:' as info;
SELECT 'Admin' as table_name, COUNT(*) as count FROM public."Admin"
UNION ALL SELECT 'Faculty', COUNT(*) FROM public."Faculty"
UNION ALL SELECT 'HOD', COUNT(*) FROM public."HOD"  
UNION ALL SELECT 'Principal', COUNT(*) FROM public."Principal"
UNION ALL SELECT 'IQAC', COUNT(*) FROM public."IQAC"
UNION ALL SELECT 'Management', COUNT(*) FROM public."Management"
UNION ALL SELECT 'Departments', COUNT(*) FROM public."Departments"
UNION ALL SELECT 'FormStatus', COUNT(*) FROM public."FormStatus"
UNION ALL SELECT 'Notifications', COUNT(*) FROM public."Notifications"
UNION ALL SELECT 'SystemSettings', COUNT(*) FROM public."SystemSettings"
UNION ALL SELECT 'FormStatusLog', COUNT(*) FROM public."FormStatusLog";

-- Show form status summary
SELECT 'FORM STATUS SUMMARY:' as info;
SELECT 
    category,
    COUNT(*) as total_forms,
    SUM(CASE WHEN is_open THEN 1 ELSE 0 END) as open_forms,
    SUM(CASE WHEN NOT is_open THEN 1 ELSE 0 END) as closed_forms
FROM public."FormStatus"
GROUP BY category;

-- Show department summary
SELECT 'DEPARTMENT SUMMARY:' as info;
SELECT name, code, faculty_count, is_active 
FROM public."Departments" 
ORDER BY faculty_count DESC;

-- =====================================================
-- ADMIN DASHBOARD IS NOW FULLY FUNCTIONAL!
-- =====================================================
-- All admin pages should now work properly:
-- - Dashboard stats will load correctly
-- - Forms control page can toggle form status  
-- - Department management has full data
-- - Notifications system is operational
-- - User management has complete user data
-- - Reports will have proper data sources
-- =====================================================
